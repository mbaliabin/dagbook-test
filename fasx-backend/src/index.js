import express from 'express'
import cors from 'cors'
import dotenv from 'dotenv'
import { PrismaClient } from '@prisma/client'

import authRoutes from './routes/auth.js'
import userRoutes from './routes/user.js'
import profileRoutes from './routes/profile.js'
import workoutRoutes from './routes/workouts.js'  // –ò–º–ø–æ—Ä—Ç —Ä–æ—É—Ç–æ–≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
import dailyInformationRouter from './routes/dailyInformation.js';

dotenv.config()

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
console.log('JWT_SECRET:', process.env.JWT_SECRET);
console.log('DATABASE_URL =', process.env.DATABASE_URL);
console.log('EMAIL_USER:', process.env.EMAIL_USER);
console.log('SMTP_HOST:', process.env.SMTP_HOST);
console.log('SMTP_PORT:', process.env.SMTP_PORT);
console.log('EMAIL_PASS:', process.env.EMAIL_PASS ? '***' : undefined);
console.log('FRONTEND_URL:', process.env.FRONTEND_URL);

const app = express()
const PORT = process.env.PORT || 4000
const prisma = new PrismaClient()

// –ò—Å–ø–æ–ª—å–∑—É–µ–º FRONTEND_URL –∏–∑ .env –∏–ª–∏ –¥–µ—Ñ–æ–ª—Ç
const frontendUrl = process.env.FRONTEND_URL || 'http://localhost:5173'

app.use(cors({
  origin: true,   // —Ä–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
  credentials: true,
}))

app.use(express.json())

// –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç—ã —Å –ø—Ä–µ—Ñ–∏–∫—Å–∞–º–∏
app.use('/api/user', userRoutes)
app.use('/api/auth', authRoutes)
app.use('/api/profile', profileRoutes)
app.use('/api/workouts', workoutRoutes)
app.use("/api/daily-information", dailyInformationRouter);

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ë–î
app.get('/api/health', async (req, res) => {
  try {
    await prisma.$queryRaw`SELECT 1`
    res.json({ status: 'ok', database: 'connected', timestamp: new Date() })
  } catch (err) {
    console.error('Database connection error:', err)
    res.status(500).json({ status: 'error', database: 'disconnected', timestamp: new Date() })
  }
})

app.get('/', (req, res) => {
  res.send('üöÄ FASX API —Ä–∞–±–æ—Ç–∞–µ—Ç!')
})

// –ü—Ä–∏–º–µ—Ä API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
app.get('/api/users', async (req, res) => {
  try {
    const users = await prisma.user.findMany()
    res.json(users)
  } catch (err) {
    console.error(err)
    res.status(500).json({ error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' })
  }
})

app.listen(PORT, '0.0.0.0', () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://0.0.0.0:${PORT}`)
})
